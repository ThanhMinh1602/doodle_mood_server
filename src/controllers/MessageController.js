const Message = require('../models/messages');
const { users } = require('../services/socket/userSocketHandler'); // L·∫•y danh s√°ch user online
const { getUserSocketId } = require('../services/socket/userSocketHandler');

async function sendMessage(socket, io) {
  socket.on('sendMessage', async ({ senderId, receiverId, message }) => {
    try {
      const receiverSocketId = getUserSocketId(receiverId);

      if (receiverSocketId) {
        // L∆∞u tin nh·∫Øn v√†o database
        const newMessage = new Message({
          senderId,
          receiverId,
          message,
          status: 'sent',
        });
        await newMessage.save();

        // G·ª≠i tin nh·∫Øn ƒë·∫øn ng∆∞·ªùi nh·∫≠n
        io.to(receiverSocketId).emit('receiveMessage', {
          success: true,
          message: 'Tin nh·∫Øn m·ªõi',
          data: {
            messageId: newMessage._id,
            senderId,
            message,
            timestamp: newMessage.createdAt,
          },
          error: null,
          statusCode: 200,
        });

        // X√°c nh·∫≠n g·ª≠i tin nh·∫Øn th√†nh c√¥ng cho ng∆∞·ªùi g·ª≠i
        socket.emit('messageSent', {
          success: true,
          message: 'G·ª≠i tin nh·∫Øn th√†nh c√¥ng',
          data: {
            messageId: newMessage._id,
            receiverId,
            message,
            timestamp: newMessage.createdAt,
          },
          error: null,
          statusCode: 200,
        });

        console.log(`üì© Tin nh·∫Øn t·ª´ ${senderId} ƒë·∫øn ${receiverId}: ${message}`);
      } else {
        // Ng∆∞·ªùi nh·∫≠n kh√¥ng online
        socket.emit('messageError', {
          success: false,
          message: 'Ng∆∞·ªùi nh·∫≠n kh√¥ng online',
          data: null,
          error: 'Receiver is offline',
          statusCode: 404,
        });
        console.log(`‚ö†Ô∏è Ng∆∞·ªùi d√πng ${receiverId} kh√¥ng online`);
      }
    } catch (error) {
      console.error('‚ùå L·ªói g·ª≠i tin nh·∫Øn:', error);
      socket.emit('messageError', {
        success: false,
        message: 'L·ªói g·ª≠i tin nh·∫Øn',
        data: null,
        error: error.message,
        statusCode: 500,
      });
    }
  });
}

module.exports = { sendMessage };
